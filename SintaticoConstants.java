/* Generated By:JavaCC: Do not edit this line. SintaticoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SintaticoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOLEAN = 6;
  /** RegularExpression Id. */
  int CHAR = 7;
  /** RegularExpression Id. */
  int INT = 8;
  /** RegularExpression Id. */
  int FOR = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int MAIN = 11;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 12;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 13;
  /** RegularExpression Id. */
  int IDENTIFIER = 14;
  /** RegularExpression Id. */
  int LETTER = 15;
  /** RegularExpression Id. */
  int DIGIT = 16;
  /** RegularExpression Id. */
  int LEFTPAREN = 17;
  /** RegularExpression Id. */
  int RIGHTPAREN = 18;
  /** RegularExpression Id. */
  int LEFTBRACE = 19;
  /** RegularExpression Id. */
  int RIGHTBRACE = 20;
  /** RegularExpression Id. */
  int SEMICOLON = 21;
  /** RegularExpression Id. */
  int ASSIGN = 22;
  /** RegularExpression Id. */
  int GREATERTHAN = 23;
  /** RegularExpression Id. */
  int LESSTHAN = 24;
  /** RegularExpression Id. */
  int EQUAL = 25;
  /** RegularExpression Id. */
  int LESSEQUAL = 26;
  /** RegularExpression Id. */
  int GREATEREQUAL = 27;
  /** RegularExpression Id. */
  int NOEQUAL = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int AND = 30;
  /** RegularExpression Id. */
  int INCREMENT = 31;
  /** RegularExpression Id. */
  int DECREMENT = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int MINUS = 34;
  /** RegularExpression Id. */
  int STAR = 35;
  /** RegularExpression Id. */
  int SLASH = 36;
  /** RegularExpression Id. */
  int PLUSASSIGN = 37;
  /** RegularExpression Id. */
  int MINUSASSIGN = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"boolean\"",
    "\"char\"",
    "\"int\"",
    "\"for\"",
    "\"if\"",
    "\"main\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"+=\"",
    "\"-=\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"?\"",
    "\":\"",
    "\"true\"",
    "\"false\"",
    "\"else\"",
    "\"return\"",
  };

}
